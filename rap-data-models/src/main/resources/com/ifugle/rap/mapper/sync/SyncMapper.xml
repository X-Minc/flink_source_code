<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ifugle.rap.mapper.sync.SyncMapper">
    <resultMap id="indexDay" type="com.ifugle.rap.sqltransform.entry.IndexDayModel">
        <id property="cycleId" column="cycle_id"/>
        <id property="orgId" column="org_id"/>
        <id property="index" column="index"/>
        <id property="dim1" column="dim1"/>
        <id property="dimData1" column="dim_data1"/>
        <id property="dim2" column="dim2"/>
        <id property="dimData2" column="dim_data2"/>
        <id property="dim3" column="dim3"/>
        <id property="dimData3" column="dim_data3"/>
        <result property="incCount" column="inc_count"/>
        <result property="nodeId" column="node_id"/>
        <result property="netIncCount" column="net_inc_count"/>
        <result property="decCount" column="dec_count"/>
        <result property="totalCount" column="total_count"/>
        <result property="incAmount" column="inc_amount"/>
        <result property="netIncAmount" column="net_inc_amount"/>
        <result property="decAmount" column="dec_amount"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="incCountChainRat" column="inc_count_chain_rat"/>
        <result property="incCountLinkRat" column="inc_count_link_rat"/>
        <result property="netIncCountChainRat" column="net_inc_count_chain_rat"/>
        <result property="netIncCountLinkRat" column="net_inc_count_link_rat"/>
        <result property="decCountChainRat" column="dec_count_chain_rat"/>
        <result property="decCountLinkRat" column="dec_count_link_rat"/>
        <result property="totalCountChainRat" column="total_count_chain_rat"/>
        <result property="totalCountLinkRat" column="total_count_link_rat"/>
        <result property="totalCountShareRat" column="total_count_share_rat"/>
        <result property="incAmountChainRat" column="inc_amount_chain_rat"/>
        <result property="incAmountLinkRat" column="inc_amount_link_rat"/>
        <result property="netIncAmountChainRat" column="net_inc_amount_chain_rat"/>
        <result property="netIncAmountLinkRat" column="net_inc_amount_link_rat"/>
        <result property="decAmountChainRat" column="dec_amount_chain_rat"/>
        <result property="decAmountLinkRat" column="dec_amount_link_rat"/>
        <result property="totalAmountChainRat" column="total_amount_chain_rat"/>
        <result property="totalAmountLinkRat" column="total_amount_link_rat"/>
        <result property="totalAmountShareRat" column="total_amount_share_rat"/>
    </resultMap>

    <resultMap id="BoardIndexDay" type="com.ifugle.rap.sqltransform.entry.BoardIndexDayModel">
        <id property="cycleId" column="cycle_id"/>
        <id property="xnzzId" column="xnzz_id"/>
        <id property="swjg_dm" column="swjg_dm"/>
        <result property="nodeId" column="node_id"/>
        <result property="userActiveRate" column="user_active_rate"/>
        <result property="nsrActiveRate" column="nsr_active_rate"/>
        <result property="nsrActiveRateIndividual" column="nsr_active_rate_individual"/>
        <result property="nsrActiveRateQy" column="nsr_active_rate_qy"/>
    </resultMap>

    <insert id="insertIndexDay" parameterType="com.ifugle.rap.sqltransform.entry.IndexDayModel">
        replace into bi_index_day
        (
        cycle_id,
        node_id,
        org_id,
        `index`,
        dim1,
        dim_data1,
        dim2,
        dim_data2,
        dim3,
        dim_data3,
        inc_count,
        inc2_count,
        net_inc_count,
        dec_count,
        total_count,
        inc_amount,
        net_inc_amount,
        dec_amount,
        total_amount,
        inc_count_chain_rat,
        inc_count_link_rat,
        net_inc_count_chain_rat,
        net_inc_count_link_rat,
        dec_count_chain_rat,
        dec_count_link_rat,
        total_count_chain_rat,
        total_count_link_rat,
        total_count_share_rat,
        inc_amount_chain_rat,
        inc_amount_link_rat,
        net_inc_amount_chain_rat,
        net_inc_amount_link_rat,
        dec_amount_chain_rat,
        dec_amount_link_rat,
        total_amount_chain_rat,
        total_amount_link_rat,
        total_amount_share_rat
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.cycleId},
            #{item.nodeId},
            #{item.orgId},
            #{item.index},
            #{item.dim1},
            #{item.dimData1},
            #{item.dim2},
            #{item.dimData2},
            #{item.dim3},
            #{item.dimData3},
            #{item.incCount},
            #{item.inc2Count},
            #{item.netIncCount},
            #{item.decCount},
            #{item.totalCount},
            #{item.incAmount},
            #{item.netIncAmount},
            #{item.decAmount},
            #{item.totalAmount},
            #{item.incCountChainRat},
            #{item.incCountLinkRat},
            #{item.netIncCountChainRat},
            #{item.netIncCountLinkRat},
            #{item.decCountChainRat},
            #{item.decCountLinkRat},
            #{item.totalCountChainRat},
            #{item.totalCountLinkRat},
            #{item.totalCountShareRat},
            #{item.incAmountChainRat},
            #{item.incAmountLinkRat},
            #{item.netIncAmountChainRat},
            #{item.netIncAmountLinkRat},
            #{item.decAmountChainRat},
            #{item.decAmountLinkRat},
            #{item.totalAmountChainRat},
            #{item.totalAmountLinkRat},
            #{item.totalAmountShareRat}
            )
        </foreach>
    </insert>

    <insert id="insertIndex30Day" parameterType="com.ifugle.rap.sqltransform.entry.IndexDayModel">
        replace into bi_index_30day
        (
        cycle_id,
        node_id,
        org_id,
        `index`,
        dim1,
        dim_data1,
        dim2,
        dim_data2,
        dim3,
        dim_data3,
        inc_count,
        net_inc_count,
        dec_count,
        total_count,
        inc_amount,
        net_inc_amount,
        dec_amount,
        total_amount,
        inc_count_chain_rat,
        inc_count_link_rat,
        net_inc_count_chain_rat,
        net_inc_count_link_rat,
        dec_count_chain_rat,
        dec_count_link_rat,
        total_count_chain_rat,
        total_count_link_rat,
        total_count_share_rat,
        inc_amount_chain_rat,
        inc_amount_link_rat,
        net_inc_amount_chain_rat,
        net_inc_amount_link_rat,
        dec_amount_chain_rat,
        dec_amount_link_rat,
        total_amount_chain_rat,
        total_amount_link_rat,
        total_amount_share_rat
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.cycleId},
            #{item.nodeId},
            #{item.orgId},
            #{item.index},
            #{item.dim1},
            #{item.dimData1},
            #{item.dim2},
            #{item.dimData2},
            #{item.dim3},
            #{item.dimData3},
            #{item.incCount},
            #{item.netIncCount},
            #{item.decCount},
            #{item.totalCount},
            #{item.incAmount},
            #{item.netIncAmount},
            #{item.decAmount},
            #{item.totalAmount},
            #{item.incCountChainRat},
            #{item.incCountLinkRat},
            #{item.netIncCountChainRat},
            #{item.netIncCountLinkRat},
            #{item.decCountChainRat},
            #{item.decCountLinkRat},
            #{item.totalCountChainRat},
            #{item.totalCountLinkRat},
            #{item.totalCountShareRat},
            #{item.incAmountChainRat},
            #{item.incAmountLinkRat},
            #{item.netIncAmountChainRat},
            #{item.netIncAmountLinkRat},
            #{item.decAmountChainRat},
            #{item.decAmountLinkRat},
            #{item.totalAmountChainRat},
            #{item.totalAmountLinkRat},
            #{item.totalAmountShareRat}
            )
        </foreach>
    </insert>

    <insert id="insertIndexMonth" parameterType="com.ifugle.rap.sqltransform.entry.IndexDayModel">
        replace into bi_index_mon
        (
        cycle_id,
        node_id,
        org_id,
        `index`,
        dim1,
        dim_data1,
        dim2,
        dim_data2,
        dim3,
        dim_data3,
        inc_count,
        net_inc_count,
        dec_count,
        total_count,
        inc_amount,
        net_inc_amount,
        dec_amount,
        total_amount,
        inc_count_chain_rat,
        inc_count_link_rat,
        net_inc_count_chain_rat,
        net_inc_count_link_rat,
        dec_count_chain_rat,
        dec_count_link_rat,
        total_count_chain_rat,
        total_count_link_rat,
        total_count_share_rat,
        inc_amount_chain_rat,
        inc_amount_link_rat,
        net_inc_amount_chain_rat,
        net_inc_amount_link_rat,
        dec_amount_chain_rat,
        dec_amount_link_rat,
        total_amount_chain_rat,
        total_amount_link_rat,
        total_amount_share_rat
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.cycleId},
            #{item.nodeId},
            #{item.orgId},
            #{item.index},
            #{item.dim1},
            #{item.dimData1},
            #{item.dim2},
            #{item.dimData2},
            #{item.dim3},
            #{item.dimData3},
            #{item.incCount},
            #{item.netIncCount},
            #{item.decCount},
            #{item.totalCount},
            #{item.incAmount},
            #{item.netIncAmount},
            #{item.decAmount},
            #{item.totalAmount},
            #{item.incCountChainRat},
            #{item.incCountLinkRat},
            #{item.netIncCountChainRat},
            #{item.netIncCountLinkRat},
            #{item.decCountChainRat},
            #{item.decCountLinkRat},
            #{item.totalCountChainRat},
            #{item.totalCountLinkRat},
            #{item.totalCountShareRat},
            #{item.incAmountChainRat},
            #{item.incAmountLinkRat},
            #{item.netIncAmountChainRat},
            #{item.netIncAmountLinkRat},
            #{item.decAmountChainRat},
            #{item.decAmountLinkRat},
            #{item.totalAmountChainRat},
            #{item.totalAmountLinkRat},
            #{item.totalAmountShareRat}
            )
        </foreach>
    </insert>

    <insert id="insertBoardIndexDay" parameterType="com.ifugle.rap.sqltransform.entry.BoardIndexDayModel">
        replace into bi_board_index_day (
        cycle_id,
        node_id,
        xnzz_id,
        swjg_dm,
        user_active_rate,
        nsr_active_rate,
        nsr_active_rate_individual,
        nsr_active_rate_qy
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.cycleId},
            #{item.nodeId},
            #{item.xnzzId},
            #{item.swjg_dm},
            #{item.userActiveRate},
            #{item.nsrActiveRate},
            #{item.nsrActiveRateIndividual},
            #{item.nsrActiveRateQy}
            )
        </foreach>
    </insert>

    <select id="getIndexDayList" resultMap="indexDay">
        select DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d')             as cycle_id,

               DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d')             as node_id,

               case when d.org_id is not null then d.org_id else s.org_id end            as org_id,

               case when d.org_id is not null then d.`index` else s.`index` end          as `index`,

               case when d.org_id is not null then d.dim1 else s.dim1 end                as dim1,

               case when d.org_id is not null then d.dim_data1 else s.dim_data1 end      as dim_data1,

               case when d.org_id is not null then d.dim2 else s.dim2 end                as dim2,

               case when d.org_id is not null then d.dim_data2 else s.dim_data2 end      as dim_data2,

               case when d.org_id is not null then d.dim3 else s.dim3 end                as dim3,

               case when d.org_id is not null then d.dim_data3 else s.dim_data3 end      as dim_data3,

               case when d.org_id is not null then d.inc_count else 0 end                as inc_count,

               -- 0 as inc2_count,

               case when d.org_id is not null then d.net_inc_count else 0 end            as net_inc_count,

               case when d.org_id is not null then d.dec_count else 0 end                as dec_count,

               case when d.org_id is not null then d.total_count else 0 end              as total_count,

               case when d.org_id is not null then d.inc_amount else 0 end               as inc_amount,

               case when d.org_id is not null then d.net_inc_amount else 0 end           as net_inc_amount,

               case when d.org_id is not null then d.dec_amount else 0 end               as dec_amount,

               case
                   when d.org_id is not null then d.total_amount
                   else
                       0 end                                                             as total_amount,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_chain_rat
                           end

                   else 0 end                                                            as inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_link_rat
                           end

                   else 0 end                                                            as inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_chain_rat
                           end

                   else 0 end                                                            as net_inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_link_rat
                           end

                   else 0 end                                                            as net_inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_chain_rat
                           end

                   else 0 end                                                            as dec_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_link_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_link_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_link_rat
                           end

                   else 0 end                                                            as dec_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.total_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.total_count_chain_rat
                           end

                   else 0 end                                                            as total_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_link_rat &gt; 9999.99 then 9999.99

                           when d.total_count_link_rat &lt; -9999.99 then -9999.99

                           else d.total_count_link_rat
                           end

                   else 0 end                                                            as total_count_link_rat,

               case when d.org_id is not null then d.total_count_share_rat else 0 end    as total_count_share_rat,

               case when d.org_id is not null then d.inc_amount_chain_rat else 0 end     as inc_amount_chain_rat,

               case when d.org_id is not null then d.inc_amount_link_rat else 0 end      as inc_amount_link_rat,

               case when d.org_id is not null then d.net_inc_amount_chain_rat else 0 end as net_inc_amount_chain_rat,

               case when d.org_id is not null then d.net_inc_amount_link_rat else 0 end  as net_inc_amount_link_rat,

               case when d.org_id is not null then d.dec_amount_chain_rat else 0 end     as dec_amount_chain_rat,

               case when d.org_id is not null then d.dec_amount_link_rat else 0 end      as dec_amount_link_rat,

               case when d.org_id is not null then d.total_amount_chain_rat else 0 end   as total_amount_chain_rat,

               case when d.org_id is not null then d.total_amount_link_rat else 0 end    as total_amount_link_rat,

               case when d.org_id is not null then d.total_amount_share_rat else 0 end   as total_amount_share_rat

        from (
                 select /* + MAPJOIN(s) */

                     s.xnzz_id        as org_id,

                     d.`index`,

                     d.dim1,

                     s.swjg_dm        as dim_data1,

                     d.dim2,

                     d.dim_data2,

                     d.dim3,

                     d.dim_data3
                         ,
                     d.is_total_index as is_total_index

                 from (
                          select swjg_dm, 0 as xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz != 2

        and swjg_dm not like '199%'

                          union all

                          select swjg_dm, xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz in (1
                              , 2)

                            and xnzz_id is not null
                      ) s
                          join

                      (
                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              ''               as dim2,
                              ''               as dim_data2,
                              ''               as dim3,
                              ''               as dim_data3,
                              d.is_total_index as
                                                  is_total_index

                          from bi_dm_index d

                          where d.code in ('40040', '40042', '40043', '40044', '40049')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('20010', '20070', '20060', '20040', '20021', '20020')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code              as `index`
                               , '1001'           as dim1
                               , m.dim_code       as dim2
                               , m.code           as dim_data2
                               , ''               as dim3
                               , ''               as dim_data3

                               , d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('10010', '10020', '10030')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1005'

                          where d.code in ('40052', '40053', '40054', '40055', '40062', '40066')

                            and m.code in (1, 2)

                          union all

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              '1005'           as dim2,
                              '1'              as dim_data2,
                              m.dim_code       as dim3,
                              m.code           as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1011'

                          where d.code in ('40054', '40055', '40062', '40066')
                      ) d on 1 = 1
             ) s

                 left outer join bi_index_day d
                                 on d.org_id = s.org_id
                                     and d.`index` = s.`index`
                                     and d.dim1 = s.dim1
                                     and d.dim_data1 = s.dim_data1
                                     and d.dim2 = s.dim2
                                     and d.dim_data2 = s.dim_data2
                                     and d.dim3 = s.dim3
                                     and d.dim_data3 = s.dim_data3
                                     and d.cycle_id = DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d');
    </select>

    <select id="getIndex30DaysList" resultMap="indexDay">
        select DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d')             as cycle_id,

               DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d')             as node_id,

               case when d.org_id is not null then d.org_id else s.org_id end            as org_id,

               case when d.org_id is not null then d.`index` else s.`index` end          as `index`,

               case when d.org_id is not null then d.dim1 else s.dim1 end                as dim1,

               case when d.org_id is not null then d.dim_data1 else s.dim_data1 end      as dim_data1,

               case when d.org_id is not null then d.dim2 else s.dim2 end                as dim2,

               case when d.org_id is not null then d.dim_data2 else s.dim_data2 end      as dim_data2,

               case when d.org_id is not null then d.dim3 else s.dim3 end                as dim3,

               case when d.org_id is not null then d.dim_data3 else s.dim_data3 end      as dim_data3,

               case when d.org_id is not null then d.inc_count else 0 end                as inc_count,

               -- 0 as inc2_count,

               case when d.org_id is not null then d.net_inc_count else 0 end            as net_inc_count,

               case when d.org_id is not null then d.dec_count else 0 end                as dec_count,

               case when d.org_id is not null then d.total_count else 0 end              as total_count,

               case when d.org_id is not null then d.inc_amount else 0 end               as inc_amount,

               case when d.org_id is not null then d.net_inc_amount else 0 end           as net_inc_amount,

               case when d.org_id is not null then d.dec_amount else 0 end               as dec_amount,

               case
                   when d.org_id is not null then d.total_amount
                   else
                       0 end                                                             as total_amount,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_chain_rat
                           end

                   else 0 end                                                            as inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_link_rat
                           end

                   else 0 end                                                            as inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_chain_rat
                           end

                   else 0 end                                                            as net_inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_link_rat
                           end

                   else 0 end                                                            as net_inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_chain_rat
                           end

                   else 0 end                                                            as dec_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_link_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_link_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_link_rat
                           end

                   else 0 end                                                            as dec_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.total_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.total_count_chain_rat
                           end

                   else 0 end                                                            as total_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_link_rat &gt; 9999.99 then 9999.99

                           when d.total_count_link_rat &lt; -9999.99 then -9999.99

                           else d.total_count_link_rat
                           end

                   else 0 end                                                            as total_count_link_rat,

               case when d.org_id is not null then d.total_count_share_rat else 0 end    as total_count_share_rat,

               case when d.org_id is not null then d.inc_amount_chain_rat else 0 end     as inc_amount_chain_rat,

               case when d.org_id is not null then d.inc_amount_link_rat else 0 end      as inc_amount_link_rat,

               case when d.org_id is not null then d.net_inc_amount_chain_rat else 0 end as net_inc_amount_chain_rat,

               case when d.org_id is not null then d.net_inc_amount_link_rat else 0 end  as net_inc_amount_link_rat,

               case when d.org_id is not null then d.dec_amount_chain_rat else 0 end     as dec_amount_chain_rat,

               case when d.org_id is not null then d.dec_amount_link_rat else 0 end      as dec_amount_link_rat,

               case when d.org_id is not null then d.total_amount_chain_rat else 0 end   as total_amount_chain_rat,

               case when d.org_id is not null then d.total_amount_link_rat else 0 end    as total_amount_link_rat,

               case when d.org_id is not null then d.total_amount_share_rat else 0 end   as total_amount_share_rat

        from (
                 select /* + MAPJOIN(s) */

                     s.xnzz_id        as org_id,

                     d.`index`,

                     d.dim1,

                     s.swjg_dm        as dim_data1,

                     d.dim2,

                     d.dim_data2,

                     d.dim3,

                     d.dim_data3
                         ,
                     d.is_total_index as is_total_index

                 from (
                          select swjg_dm, 0 as xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz != 2

        and swjg_dm not like '199%'

                          union all

                          select swjg_dm, xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz in (1
                              , 2)

                            and xnzz_id is not null
                      ) s
                          join

                      (
                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              ''               as dim2,
                              ''               as dim_data2,
                              ''               as dim3,
                              ''               as dim_data3,
                              d.is_total_index as
                                                  is_total_index

                          from bi_dm_index d

                          where d.code in ('40040', '40042', '40043', '40044', '40049')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('20010', '20070', '20060', '20040', '20021', '20020')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code              as `index`
                               , '1001'           as dim1
                               , m.dim_code       as dim2
                               , m.code           as dim_data2
                               , ''               as dim3
                               , ''               as dim_data3

                               , d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('10010', '10020', '10030')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1005'

                          where d.code in ('40052', '40053', '40054', '40055', '40062', '40066')

                            and m.code in (1, 2)

                          union all

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              '1005'           as dim2,
                              '1'              as dim_data2,
                              m.dim_code       as dim3,
                              m.code           as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1011'

                          where d.code in ('40054', '40055', '40062', '40066')
                      ) d on 1 = 1
             ) s

                 left outer join bi_index_day d
                                 on d.org_id = s.org_id
                                     and d.`index` = s.`index`
                                     and d.dim1 = s.dim1
                                     and d.dim_data1 = s.dim_data1
                                     and d.dim2 = s.dim2
                                     and d.dim_data2 = s.dim_data2
                                     and d.dim3 = s.dim3
                                     and d.dim_data3 = s.dim_data3
                                     and d.cycle_id = DATE_FORMAT(date_sub(CURRENT_DATE, interval 1 day), '%Y%m%d');
    </select>

    <select id="getIndexMonthList" resultMap="indexDay">
        select DATE_FORMAT(CURRENT_DATE, '%Y%m')                                         as cycle_id,

               DATE_FORMAT(CURRENT_DATE, '%Y%m')                                         as node_id,

               case when d.org_id is not null then d.org_id else s.org_id end            as org_id,

               case when d.org_id is not null then d.`index` else s.`index` end          as `index`,

               case when d.org_id is not null then d.dim1 else s.dim1 end                as dim1,

               case when d.org_id is not null then d.dim_data1 else s.dim_data1 end      as dim_data1,

               case when d.org_id is not null then d.dim2 else s.dim2 end                as dim2,

               case when d.org_id is not null then d.dim_data2 else s.dim_data2 end      as dim_data2,

               case when d.org_id is not null then d.dim3 else s.dim3 end                as dim3,

               case when d.org_id is not null then d.dim_data3 else s.dim_data3 end      as dim_data3,

               case when d.org_id is not null then d.inc_count else 0 end                as inc_count,

               -- 0 as inc2_count,

               case when d.org_id is not null then d.net_inc_count else 0 end            as net_inc_count,

               case when d.org_id is not null then d.dec_count else 0 end                as dec_count,

               case when d.org_id is not null then d.total_count else 0 end              as total_count,

               case when d.org_id is not null then d.inc_amount else 0 end               as inc_amount,

               case when d.org_id is not null then d.net_inc_amount else 0 end           as net_inc_amount,

               case when d.org_id is not null then d.dec_amount else 0 end               as dec_amount,

               case
                   when d.org_id is not null then d.total_amount
                   else
                       0 end                                                             as total_amount,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_chain_rat
                           end

                   else 0 end                                                            as inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.inc_count_link_rat
                           end

                   else 0 end                                                            as inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_chain_rat
                           end

                   else 0 end                                                            as net_inc_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.net_inc_count_link_rat &gt; 9999.99 then 9999.99

                           when d.net_inc_count_link_rat &lt; -9999.99 then -9999.99

                           else d.net_inc_count_link_rat
                           end

                   else 0 end                                                            as net_inc_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_chain_rat
                           end

                   else 0 end                                                            as dec_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.dec_count_link_rat &gt; 9999.99 then 9999.99

                           when d.dec_count_link_rat &lt; -9999.99 then -9999.99

                           else d.dec_count_link_rat
                           end

                   else 0 end                                                            as dec_count_link_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_chain_rat &gt; 9999.99 then 9999.99

                           when d.total_count_chain_rat &lt; -9999.99 then -9999.99

                           else d.total_count_chain_rat
                           end

                   else 0 end                                                            as total_count_chain_rat,

               case
                   when d.org_id is not null then
                       case

                           when d.total_count_link_rat &gt; 9999.99 then 9999.99

                           when d.total_count_link_rat &lt; -9999.99 then -9999.99

                           else d.total_count_link_rat
                           end

                   else 0 end                                                            as total_count_link_rat,

               case when d.org_id is not null then d.total_count_share_rat else 0 end    as total_count_share_rat,

               case when d.org_id is not null then d.inc_amount_chain_rat else 0 end     as inc_amount_chain_rat,

               case when d.org_id is not null then d.inc_amount_link_rat else 0 end      as inc_amount_link_rat,

               case when d.org_id is not null then d.net_inc_amount_chain_rat else 0 end as net_inc_amount_chain_rat,

               case when d.org_id is not null then d.net_inc_amount_link_rat else 0 end  as net_inc_amount_link_rat,

               case when d.org_id is not null then d.dec_amount_chain_rat else 0 end     as dec_amount_chain_rat,

               case when d.org_id is not null then d.dec_amount_link_rat else 0 end      as dec_amount_link_rat,

               case when d.org_id is not null then d.total_amount_chain_rat else 0 end   as total_amount_chain_rat,

               case when d.org_id is not null then d.total_amount_link_rat else 0 end    as total_amount_link_rat,

               case when d.org_id is not null then d.total_amount_share_rat else 0 end   as total_amount_share_rat

        from (
                 select /* + MAPJOIN(s) */

                     s.xnzz_id        as org_id,

                     d.`index`,

                     d.dim1,

                     s.swjg_dm        as dim_data1,

                     d.dim2,

                     d.dim_data2,

                     d.dim3,

                     d.dim_data3
                         ,
                     d.is_total_index as is_total_index

                 from (
                          select swjg_dm, 0 as xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz != 2

        and swjg_dm not like '199%'

                          union all

                          select swjg_dm, xnzz_id

                          from bi_dm_swjg

                          where sybz = 1

                            and swjgbz in (1
                              , 2)

                            and xnzz_id is not null
                      ) s
                          join

                      (
                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              ''               as dim2,
                              ''               as dim_data2,
                              ''               as dim3,
                              ''               as dim_data3,
                              d.is_total_index as
                                                  is_total_index

                          from bi_dm_index d

                          where d.code in ('40040', '40042', '40043', '40044', '40049')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('20010', '20070', '20060', '20040', '20021', '20020')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code              as `index`
                               , '1001'           as dim1
                               , m.dim_code       as dim2
                               , m.code           as dim_data2
                               , ''               as dim3
                               , ''               as dim_data3

                               , d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1004' and m.code in ('1', '5')

                          where d.code in ('10010', '10020', '10030')

                          UNION ALL

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              m.dim_code       as dim2,
                              m.code           as dim_data2,
                              ''               as dim3,
                              ''               as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1005'

                          where d.code in ('40052', '40053', '40054', '40055', '40062', '40066')

                            and m.code in (1, 2)

                          union all

                          select /* + MAPJOIN(d) */

                              d.code           as `index`,
                              '1001'           as dim1,
                              '1005'           as dim2,
                              '1'              as dim_data2,
                              m.dim_code       as dim3,
                              m.code           as
                                                  dim_data3,
                              d.is_total_index as is_total_index

                          from bi_dm_index d

                                   join bi_dm_dim_data m on m.dim_code = '1011'

                          where d.code in ('40054', '40055', '40062', '40066')
                      ) d on 1 = 1
             ) s

                 left outer join bi_index_mon d
                                 on d.org_id = s.org_id
                                     and d.`index` = s.`index`
                                     and d.dim1 = s.dim1
                                     and d.dim_data1 = s.dim_data1
                                     and d.dim2 = s.dim2
                                     and d.dim_data2 = s.dim_data2
                                     and d.dim3 = s.dim3
                                     and d.dim_data3 = s.dim_data3
                                     and d.cycle_id = DATE_FORMAT(CURRENT_DATE, '%Y%m');
    </select>

    <select id="sweepUp" resultMap="BoardIndexDay">
        select a.cycle_id,
               a.node_id,
               a.xnzz_id,
               a.swjg_dm,
               if(`user` = 0, 0, ifnull(user_active / `user`, 0))    as user_active_rate,
               if(nsr = 0, 0, ifnull(nsr_active / nsr, 0))           as nsr_active_rate,
               if(nsr_individual = 0, 0,
                  ifnull(nsr_active_individual / nsr_individual, 0)) as nsr_active_rate_individual,
               if(nsr_qy = 0, 0, ifnull(nsr_active_qy / nsr_qy, 0))  as nsr_active_rate_qy
        from (
                 select cycle_id,
                        node_id,
                        org_id                         as xnzz_id,
                        dim_data1                      as swjg_dm,
                        ifnull(sum(case
                                       when `index` = '10010' and dim_data2 = '5' and dim_data3 = '' then total_count
                                       else 0 end), 0) as `user`,
                        ifnull(sum(case
                                       when `index` = '10010' and dim_data2 = '1' and dim_data3 = '' then total_count
                                       else 0 end), 0) as user_active,
                        ifnull(sum(case
                                       when `index` = '20010' and dim_data2 = '5' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr,
                        ifnull(sum(case
                                       when `index` = '20010' and dim_data2 = '1' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_active,
                        ifnull(sum(case
                                       when `index` = '20040' and dim_data2 = '5' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_individual,
                        ifnull(sum(case
                                       when `index` = '20040' and dim_data2 = '1' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_active_individual,
                        ifnull(sum(case
                                       when `index` = '40062' and dim_data2 = '1' and dim_data3 = '' then inc_count
                                       else 0 end), 0) as nsr_push_msg_month,
                        ifnull(sum(case
                                       when `index` = '40062' and dim_data2 = '2' and dim_data3 = '' then inc_count
                                       else 0 end), 0) as nsr_data_collect_month,
                        ifnull(sum(case
                                       when `index` = '40062' and dim_data2 = '3' and dim_data3 = '' then inc_count
                                       else 0 end), 0) as nsr_data_check_month,
                        ifnull(sum(case
                                       when `index` = '20060' and dim_data2 = '5' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_unknown_type,
                        ifnull(sum(case
                                       when `index` = '20060' and dim_data2 = '1' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_active_unknown_type,
                        ifnull(sum(case
                                       when `index` = '20070' and dim_data2 = '5' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_qy,
                        ifnull(sum(case
                                       when `index` = '20070' and dim_data2 = '1' and dim_data3 = '' then total_count
                                       else 0 end), 0) as nsr_active_qy,
                        ifnull(sum(case
                                       when `index` = '40040' and dim_data2 = '' and dim_data3 = '' then total_count
                                       else 0 end), 0) as `group`,
                        ifnull(sum(case
                                       when `index` = '40042' and dim_data2 = '' and dim_data3 = '' then total_count
                                       else 0 end), 0) as group_user_distinct,
                        ifnull(sum(case
                                       when `index` = '40043' and dim_data2 = '' and dim_data3 = '' then total_count
                                       else 0 end), 0) as group_nsr,
                        ifnull(sum(case
                                       when `index` = '40044' and dim_data2 = '' and dim_data3 = '' then total_count
                                       else 0 end), 0) as group_nsr_general
                 from bi_index_day
                 where cycle_id = 20220105
                   AND dim1 = '1001'
                   AND `INDEX` IN
                       ('10010', '20010', '20040', '40062', '20060', '20070', '40040', '40042', '40043', '40044')
                   AND dim_data2 IN ('1', '5', '')
                   AND dim3 = ''
                 group by org_id, dim_data1
             ) a
    </select>
</mapper>
